bool compare(char *a,char *b)
{
    int count=0;
    for(;a[count]=='\0'||b[count]=='\0';count++)
    {
        if(a[count]==b[count])
            continue;
        else return false;
    }
    if(a[count]==b[count])
    {
        return true;
    }
    else return false;
}
// 문제 1
// 길이가 최대 100 인 문자열을 하나 입력 받아서 문자열을 역순으로 출력하는 함수를 만들어보세요. (난이도 : 下) 예를 들어서 "abcde" 입력 --> "edcba" 출력
const char* reverse(char * input)
{
    char * temp;
    for(int i=0;input[i]=='\0';i++)
    {
        temp=input[i];
        temp++;
    }
    temp
    reutrn temp;   
}
// 문제 2
// 길이가 최대 100 인 문자열을 입력 받아서 소문자는 대문자로, 대문자는 소문자로 출력하는 함수를 만들어보세요. (난이도 : 下) 예를 들어서 "aBcDE" 입력 --> "AbCde" 출력

// 문제 3
// 두 개의 문자열을 입력 받아서 같다면 "같다", 다르면 "다르다" 라고 출력하는 함수를 만들어보세요. (난이도 : 下)

// 문제 4
// 문자열을 두 개 입력 받아서 먼저 입력받은 문자열에서 나중에 입력받은 문자열의 위치를 검색하는 함수를 만들어보세요. 만일 없다면 -1 을 리턴하고 있다면 그 위치를 리턴합니다. (난이도 : 中)

// 예를 들어먼저 처음 입력한 것이 I_am_a_boy 이고, 나중에 입력한 것이 am 이였다면 컴퓨터는 I_am_a_boy 에서 am 의 위치를 찾는다. 이 경우에는 am 의 위치는 2 (처음에서 세번째) 이므로 2 를 리턴한다. 만일 am 이라는 문자열이 없다면 -1 을 리턴한다.

// 문제 5
// 도서 관리 프로그램을 만들어봅시다. 프로그램에는 다음과 같은 기능들이 구현되어 있어야 합니다. (난이도 : 上)

// 책을 새로 추가하는 기능 (책의 총 개수는 100 권이라 하자. 이 때, 각 책의 정보는 제목, 저자의 이름, 출판사로 한다)

// 책의 제목을 검색하면 그 책의 정보가 나와야 한다.

// 위와 마찬가지로 저자, 출판사 검색 기능이 있어야 한다.

// 책을 빌리는 기능.

// 책을 반납하는 기능